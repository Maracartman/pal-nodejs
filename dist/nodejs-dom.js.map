{"version":3,"sources":["nodejs-dom.ts"],"names":[],"mappings":";;AAUA;;EAEE;AACF;IAEE,YAAmB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;QASlC,aAAQ,GAAW,sBAAsB,CAAC;QAC1C,UAAK,GAAW,EAAE,CAAC;QACnB,kBAAa,GAAY,IAAI,CAAC;QAV5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,gBAAiB,SAAQ,MAAM,CAAC,OAAO;SAAI,CAAC;IACrF,CAAC;IASD,gBAAgB,CAAC,SAAiB,EAAE,QAA4C,EAAE,OAAgB;QAChG,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC7E,CAAC;IACD,mBAAmB,CAAC,SAAiB,EAAE,QAA4C,EAAE,OAAgB;QACnG,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAChF,CAAC;IAED,aAAa,CAAC,OAAe;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IACD,eAAe,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IACD,cAAc,CAAC,IAAY;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IACD,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IACD,sBAAsB;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;IACvD,CAAC;IACD,qBAAqB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACxD,CAAC;IACD,sBAAsB,CAAC,QAAyE;QAC9F,OAAO,IAAI,CAAO,IAAI,CAAC,MAAM,CAAC,MAAO,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC;IACpE,CAAC;IACD,iBAAiB,CAAC,SAAiB,EAAE,OAAgB;QACnD,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,aAAa,CAAC,GAAU;QACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IACD,gBAAgB,CAAC,OAAgB;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACD,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IACD,aAAa,CAA8B,KAAa;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IACD,gBAAgB,CAA8B,KAAa;QACzD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IACD,kBAAkB,CAAC,OAAgB;QACjC,OAAO,OAAO,CAAC,kBAAkB,CAAC;IACpC,CAAC;IACD,wBAAwB,CAAC,MAAc;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;QAE1B,IAAI,IAAI,GAAG,MAAM,CAAC,iBAAiB,CAAC;QACpC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,0GAA0G,CAAC,CAAC;SAC7H;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,MAAc,EAAE,WAAqB,EAAE,OAAiB;QACnE,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QAEvB,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEvD,IAAI,OAAO,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;aAAM;YACL,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,IAAU;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,UAAU,CAAC,OAAa,EAAE,UAAiB;QACzC,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,WAAW,CAAC,OAAa,EAAE,IAAU,EAAE,UAAiB;QACtD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC7C;aAAM;YACL,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACxC;IACH,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,UAAiB;QACtC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACnC;aACI;YACH,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC9B;IACH,CAAC;CACF;AAlHD,8BAkHC","file":"nodejs-dom.js","sourcesContent":["import { IDom } from './dom';\nimport { IGlobal } from './global';\n\ndeclare module './global' {\n  interface IGlobal {\n    window: any;\n    document: any;\n  }\n}\n\n/**\n* Represents the core APIs of the DOM.\n*/\nexport class NodeJsDom implements IDom {\n\n  constructor(public global: IGlobal) {\n    this.Element = global.Element;\n    this.NodeList = global.NodeList;\n    this.SVGElement = global.SVGElement || class SVGElement extends global.Element { };\n  }\n\n  Element: typeof Element;\n  NodeList: typeof NodeList;\n  SVGElement: typeof SVGElement /* until a proper implementation is ready: */ | any;\n  boundary: string = 'aurelia-dom-boundary';\n  title: string = \"\";\n  activeElement: Element = null;\n\n  addEventListener(eventName: string, callback: EventListenerOrEventListenerObject, capture: boolean): void {\n    return this.global.document.addEventListener(eventName, callback, capture);\n  }\n  removeEventListener(eventName: string, callback: EventListenerOrEventListenerObject, capture: boolean): void {\n    return this.global.document.removeEventListener(eventName, callback, capture);\n  }\n  createElement<T extends keyof HTMLElementTagNameMap>(tagName: T): HTMLElementTagNameMap[T];\n  createElement(tagName: string): Element {\n    return this.global.document.createElement(tagName);\n  }\n  createAttribute(name: string): Attr {\n    return this.global.document.createAttribute(name);\n  }\n  createTextNode(text: string): Text {\n    return this.global.document.createTextNode(text);\n  }\n  createComment(text: string): Comment {\n    return this.global.document.createComment(text);\n  }\n  createDocumentFragment(): DocumentFragment {\n    return this.global.document.createDocumentFragment();\n  }\n  createTemplateElement(): HTMLTemplateElement {\n    return this.global.document.createElement('template');\n  }\n  createMutationObserver(callback: (changes: MutationRecord[], instance: MutationObserver) => void): MutationObserver {\n    return new ((<any>this.global.window).MutationObserver)(callback);\n  }\n  createCustomEvent(eventType: string, options?: Object): CustomEvent {\n    return new this.global.CustomEvent(eventType, options);\n  }\n  dispatchEvent(evt: Event): void {\n    this.global.window.dispatchEvent(evt);\n  }\n  getComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.global.window.getComputedStyle(element);\n  }\n  getElementById(id: string): Element {\n    return this.global.document.getElementById(id);\n  }\n  querySelector<E extends Element = Element>(query: string): E | null {\n    return this.global.document.querySelector(query);\n  }\n  querySelectorAll<E extends Element = Element>(query: string): NodeListOf<E> {\n    return this.global.document.querySelectorAll(query);\n  }\n  nextElementSibling(element: Element): Element {\n    return element.nextElementSibling;\n  }\n  createTemplateFromMarkup(markup: string): HTMLTemplateElement {\n    let parser = this.global.document.createElement('div');\n    parser.innerHTML = markup;\n\n    let temp = parser.firstElementChild;\n    if (!temp || temp.nodeName !== 'TEMPLATE') {\n      throw new Error('Template markup must be wrapped in a <template> element e.g. <template> <!-- markup here --> </template>');\n    }\n    return temp;\n  }\n\n  injectStyles(styles: string, destination?: Element, prepend?: boolean): Node {\n    let node = this.global.document.createElement('style');\n    node.innerHTML = styles;\n    node.type = 'text/css';\n\n    destination = destination || this.global.document.head;\n\n    if (prepend && destination.childNodes.length > 0) {\n      destination.insertBefore(node, destination.childNodes[0]);\n    } else {\n      destination.appendChild(node);\n    }\n    return node;\n  }\n\n  adoptNode(node: Node): Node {\n    return this.global.document.adoptNode(node);\n  }\n\n  appendNode(newNode: Node, parentNode?: Node): void {\n    (parentNode || this.global.document.body).appendChild(newNode);\n  }\n\n  replaceNode(newNode: Node, node: Node, parentNode?: Node): void {\n    if (node.parentNode) {\n      node.parentNode.replaceChild(newNode, node);\n    } else {\n      parentNode.replaceChild(newNode, node);\n    }\n  }\n\n  removeNode(node: Node, parentNode?: Node): void {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n"],"sourceRoot":"../src/"}